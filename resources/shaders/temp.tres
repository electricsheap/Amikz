[gd_resource type="VisualShader" load_steps=5 format=2]

[sub_resource type="VisualShaderNodeTransformUniform" id=1]
uniform_name = "TransformUniform"

[sub_resource type="VisualShaderNodeTransformFunc" id=2]

[sub_resource type="VisualShaderNodeTransformDecompose" id=3]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeVectorDecompose" id=4]
output_port_for_preview = 2

[resource]
code = "shader_type canvas_item;
uniform mat4 TransformUniform;



void vertex() {
// Output:0

}

void fragment() {
// TransformUniform:2
	mat4 n_out2p0 = TransformUniform;

// TransformDecompose:4
	vec3 n_out4p0 = n_out2p0[0].xyz;
	vec3 n_out4p1 = n_out2p0[1].xyz;
	vec3 n_out4p2 = n_out2p0[2].xyz;
	vec3 n_out4p3 = n_out2p0[3].xyz;

// VectorDecompose:5
	float n_out5p0 = n_out4p0.x;
	float n_out5p1 = n_out4p0.y;
	float n_out5p2 = n_out4p0.z;

// Output:0
	COLOR.rgb = vec3(n_out5p0);

}

void light() {
// Output:0

}
"
custom_defines = ""
mode = 1
flags/light_only = false
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( 60, 200 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( 200, 120 )
nodes/fragment/4/node = SubResource( 3 )
nodes/fragment/4/position = Vector2( 40, 320 )
nodes/fragment/5/node = SubResource( 4 )
nodes/fragment/5/position = Vector2( 280, 380 )
nodes/fragment/connections = PoolIntArray( 2, 0, 3, 0, 2, 0, 4, 0, 4, 0, 5, 0, 5, 0, 0, 0 )
